{
  "{\"assumptions\":{},\"sourceRoot\":\"/home/franky/myProjects/vault-server/src/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/franky/myProjects/vault-server\",\"filename\":\"/home/franky/myProjects/vault-server/src/index.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/franky/myProjects/vault-server\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-private-methods\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":true,\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.14.6": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "/home/franky/myProjects/vault-server/src/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/franky/myProjects/vault-server",
      "filename": "/home/franky/myProjects/vault-server/src/index.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "/home/franky/myProjects/vault-server",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-private-methods",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": true,
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/franky/myProjects/vault-server/src/index.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "classPrivateMethods",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/franky/myProjects/vault-server/src/index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/franky/myProjects/vault-server/src/",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nrequire(\"reflect-metadata\");\n\nvar _mongoose = _interopRequireDefault(require(\"mongoose\"));\n\nvar _nodeFramework = require(\"@frankycty/node-framework\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar CONFIG = require('config');\n\nvar main = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator(function* () {\n    // ============= Connect with Redis =========================\n    // const RedisStore = connectRedis(session);\n    // const redisClient = redis.createClient();\n    // ============= Connect with MongoDB =======================\n    var connectionOpts = {\n      promiseLibrary: global.Promise,\n      poolSize: 25,\n      useNewUrlParser: true,\n      useCreateIndex: true,\n      useFindAndModify: false,\n      useUnifiedTopology: true\n    };\n    yield _mongoose.default.connect(CONFIG.db.uri, connectionOpts);\n    var routes = [{\n      method: 'get',\n      path: '/',\n      handler: (ctx, _) => {\n        ctx.body = {\n          status: 'success'\n        };\n      }\n    }];\n    yield _nodeFramework.Server.start(routes, [], {\n      port: CONFIG.server.port\n    });\n  });\n\n  return function main() {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nmain();\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbIkNPTkZJRyIsInJlcXVpcmUiLCJtYWluIiwiY29ubmVjdGlvbk9wdHMiLCJwcm9taXNlTGlicmFyeSIsImdsb2JhbCIsIlByb21pc2UiLCJwb29sU2l6ZSIsInVzZU5ld1VybFBhcnNlciIsInVzZUNyZWF0ZUluZGV4IiwidXNlRmluZEFuZE1vZGlmeSIsInVzZVVuaWZpZWRUb3BvbG9neSIsIk1vbmdvb3NlIiwiY29ubmVjdCIsImRiIiwidXJpIiwicm91dGVzIiwibWV0aG9kIiwicGF0aCIsImhhbmRsZXIiLCJjdHgiLCJfIiwiYm9keSIsInN0YXR1cyIsIlNlcnZlciIsInN0YXJ0IiwicG9ydCIsInNlcnZlciJdLCJtYXBwaW5ncyI6Ijs7QUFBQTs7QUFHQTs7QUFDQTs7Ozs7Ozs7QUFDQSxJQUFNQSxNQUFNLEdBQUdDLE9BQU8sQ0FBQyxRQUFELENBQXRCOztBQUVBLElBQU1DLElBQUk7QUFBQSwrQkFBRyxhQUFZO0FBQ3ZCO0FBRUE7QUFDQTtBQUVBO0FBQ0EsUUFBTUMsY0FBYyxHQUFHO0FBQ3JCQyxNQUFBQSxjQUFjLEVBQUVDLE1BQU0sQ0FBQ0MsT0FERjtBQUVyQkMsTUFBQUEsUUFBUSxFQUFFLEVBRlc7QUFHckJDLE1BQUFBLGVBQWUsRUFBRSxJQUhJO0FBSXJCQyxNQUFBQSxjQUFjLEVBQUUsSUFKSztBQUtyQkMsTUFBQUEsZ0JBQWdCLEVBQUUsS0FMRztBQU1yQkMsTUFBQUEsa0JBQWtCLEVBQUU7QUFOQyxLQUF2QjtBQVNBLFVBQU1DLGtCQUFTQyxPQUFULENBQWlCYixNQUFNLENBQUNjLEVBQVAsQ0FBVUMsR0FBM0IsRUFBZ0NaLGNBQWhDLENBQU47QUFFQSxRQUFNYSxNQUFNLEdBQUcsQ0FDYjtBQUNFQyxNQUFBQSxNQUFNLEVBQUUsS0FEVjtBQUVFQyxNQUFBQSxJQUFJLEVBQUUsR0FGUjtBQUdFQyxNQUFBQSxPQUFPLEVBQUUsQ0FBQ0MsR0FBRCxFQUFNQyxDQUFOLEtBQVk7QUFDbkJELFFBQUFBLEdBQUcsQ0FBQ0UsSUFBSixHQUFXO0FBQ1RDLFVBQUFBLE1BQU0sRUFBRTtBQURDLFNBQVg7QUFHRDtBQVBILEtBRGEsQ0FBZjtBQVlBLFVBQU1DLHNCQUFPQyxLQUFQLENBQWFULE1BQWIsRUFBcUIsRUFBckIsRUFBeUI7QUFBRVUsTUFBQUEsSUFBSSxFQUFFMUIsTUFBTSxDQUFDMkIsTUFBUCxDQUFjRDtBQUF0QixLQUF6QixDQUFOO0FBQ0QsR0EvQlM7O0FBQUEsa0JBQUp4QixJQUFJO0FBQUE7QUFBQTtBQUFBLEdBQVY7O0FBaUNBQSxJQUFJIiwic291cmNlUm9vdCI6Ii9ob21lL2ZyYW5reS9teVByb2plY3RzL3ZhdWx0LXNlcnZlci9zcmMvIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICdyZWZsZWN0LW1ldGFkYXRhJztcbi8vIGltcG9ydCByZWRpcyBmcm9tICdyZWRpcyc7XG4vLyBpbXBvcnQgY29ubmVjdFJlZGlzIGZyb20gJ2Nvbm5lY3QtcmVkaXMnO1xuaW1wb3J0IE1vbmdvb3NlIGZyb20gJ21vbmdvb3NlJztcbmltcG9ydCB7IFNlcnZlciB9IGZyb20gJ0BmcmFua3ljdHkvbm9kZS1mcmFtZXdvcmsnO1xuY29uc3QgQ09ORklHID0gcmVxdWlyZSgnY29uZmlnJyk7XG5cbmNvbnN0IG1haW4gPSBhc3luYyAoKSA9PiB7XG4gIC8vID09PT09PT09PT09PT0gQ29ubmVjdCB3aXRoIFJlZGlzID09PT09PT09PT09PT09PT09PT09PT09PT1cblxuICAvLyBjb25zdCBSZWRpc1N0b3JlID0gY29ubmVjdFJlZGlzKHNlc3Npb24pO1xuICAvLyBjb25zdCByZWRpc0NsaWVudCA9IHJlZGlzLmNyZWF0ZUNsaWVudCgpO1xuXG4gIC8vID09PT09PT09PT09PT0gQ29ubmVjdCB3aXRoIE1vbmdvREIgPT09PT09PT09PT09PT09PT09PT09PT1cbiAgY29uc3QgY29ubmVjdGlvbk9wdHMgPSB7XG4gICAgcHJvbWlzZUxpYnJhcnk6IGdsb2JhbC5Qcm9taXNlLFxuICAgIHBvb2xTaXplOiAyNSxcbiAgICB1c2VOZXdVcmxQYXJzZXI6IHRydWUsXG4gICAgdXNlQ3JlYXRlSW5kZXg6IHRydWUsXG4gICAgdXNlRmluZEFuZE1vZGlmeTogZmFsc2UsXG4gICAgdXNlVW5pZmllZFRvcG9sb2d5OiB0cnVlLFxuICB9O1xuXG4gIGF3YWl0IE1vbmdvb3NlLmNvbm5lY3QoQ09ORklHLmRiLnVyaSwgY29ubmVjdGlvbk9wdHMpO1xuXG4gIGNvbnN0IHJvdXRlcyA9IFtcbiAgICB7XG4gICAgICBtZXRob2Q6ICdnZXQnLFxuICAgICAgcGF0aDogJy8nLFxuICAgICAgaGFuZGxlcjogKGN0eCwgXykgPT4ge1xuICAgICAgICBjdHguYm9keSA9IHtcbiAgICAgICAgICBzdGF0dXM6ICdzdWNjZXNzJyxcbiAgICAgICAgfTtcbiAgICAgIH0sXG4gICAgfSxcbiAgXTtcblxuICBhd2FpdCBTZXJ2ZXIuc3RhcnQocm91dGVzLCBbXSwgeyBwb3J0OiBDT05GSUcuc2VydmVyLnBvcnQgfSk7XG59O1xuXG5tYWluKCk7XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "CONFIG",
        "require",
        "main",
        "connectionOpts",
        "promiseLibrary",
        "global",
        "Promise",
        "poolSize",
        "useNewUrlParser",
        "useCreateIndex",
        "useFindAndModify",
        "useUnifiedTopology",
        "Mongoose",
        "connect",
        "db",
        "uri",
        "routes",
        "method",
        "path",
        "handler",
        "ctx",
        "_",
        "body",
        "status",
        "Server",
        "start",
        "port",
        "server"
      ],
      "mappings": ";;AAAA;;AAGA;;AACA;;;;;;;;AACA,IAAMA,MAAM,GAAGC,OAAO,CAAC,QAAD,CAAtB;;AAEA,IAAMC,IAAI;AAAA,+BAAG,aAAY;AACvB;AAEA;AACA;AAEA;AACA,QAAMC,cAAc,GAAG;AACrBC,MAAAA,cAAc,EAAEC,MAAM,CAACC,OADF;AAErBC,MAAAA,QAAQ,EAAE,EAFW;AAGrBC,MAAAA,eAAe,EAAE,IAHI;AAIrBC,MAAAA,cAAc,EAAE,IAJK;AAKrBC,MAAAA,gBAAgB,EAAE,KALG;AAMrBC,MAAAA,kBAAkB,EAAE;AANC,KAAvB;AASA,UAAMC,kBAASC,OAAT,CAAiBb,MAAM,CAACc,EAAP,CAAUC,GAA3B,EAAgCZ,cAAhC,CAAN;AAEA,QAAMa,MAAM,GAAG,CACb;AACEC,MAAAA,MAAM,EAAE,KADV;AAEEC,MAAAA,IAAI,EAAE,GAFR;AAGEC,MAAAA,OAAO,EAAE,CAACC,GAAD,EAAMC,CAAN,KAAY;AACnBD,QAAAA,GAAG,CAACE,IAAJ,GAAW;AACTC,UAAAA,MAAM,EAAE;AADC,SAAX;AAGD;AAPH,KADa,CAAf;AAYA,UAAMC,sBAAOC,KAAP,CAAaT,MAAb,EAAqB,EAArB,EAAyB;AAAEU,MAAAA,IAAI,EAAE1B,MAAM,CAAC2B,MAAP,CAAcD;AAAtB,KAAzB,CAAN;AACD,GA/BS;;AAAA,kBAAJxB,IAAI;AAAA;AAAA;AAAA,GAAV;;AAiCAA,IAAI",
      "sourceRoot": "/home/franky/myProjects/vault-server/src/",
      "sourcesContent": [
        "import 'reflect-metadata';\n// import redis from 'redis';\n// import connectRedis from 'connect-redis';\nimport Mongoose from 'mongoose';\nimport { Server } from '@frankycty/node-framework';\nconst CONFIG = require('config');\n\nconst main = async () => {\n  // ============= Connect with Redis =========================\n\n  // const RedisStore = connectRedis(session);\n  // const redisClient = redis.createClient();\n\n  // ============= Connect with MongoDB =======================\n  const connectionOpts = {\n    promiseLibrary: global.Promise,\n    poolSize: 25,\n    useNewUrlParser: true,\n    useCreateIndex: true,\n    useFindAndModify: false,\n    useUnifiedTopology: true,\n  };\n\n  await Mongoose.connect(CONFIG.db.uri, connectionOpts);\n\n  const routes = [\n    {\n      method: 'get',\n      path: '/',\n      handler: (ctx, _) => {\n        ctx.body = {\n          status: 'success',\n        };\n      },\n    },\n  ];\n\n  await Server.start(routes, [], { port: CONFIG.server.port });\n};\n\nmain();\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1624067471860
  }
}