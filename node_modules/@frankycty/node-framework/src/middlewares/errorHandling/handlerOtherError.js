import { unauthorized, boomify, isBoom } from "@hapi/boom";
import { isFunction } from "@soltalabs/ramda-extra";
import { getErrorResponse, getHttpStatusFromError } from "./helpers";

const errorLog = (logger = {}, err) => {
  if (isFunction(logger.error)) {
    logger.error(err);
  }
};

const debugLog = (logger = {}, err) => {
  if (isFunction(logger.debug)) {
    logger.debug(err);
  }
};

export default (err, ctx, { logger = {}, badRequestErrors }) => {
  const statusCode = getHttpStatusFromError(err, badRequestErrors);
  if (err.name === "UnauthorizedError") {
    debugLog(logger, err);
    ctx.status = 401;
    ctx.body = getErrorResponse(
      unauthorized(`InvalidAuthToken: ${err.message}`)
    );
    return;
  }

  if (statusCode > 499) {
    errorLog(logger, err);
  }

  if (!isBoom(err)) {
    boomify(err, {
      statusCode,
    });
  }

  debugLog(logger, err);

  ctx.status = statusCode;
  ctx.body = getErrorResponse(err);
};
