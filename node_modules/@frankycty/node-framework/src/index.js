import Koa from "koa";
import Boom from "@hapi/boom";
import { buildRouters, useQueryParser } from "./utils";
import mount from "koa-mount";
import serve from "koa-static";
import { forEach } from "@frankycty/rm-extra";
import DataValidator from "./dataValidator";

const Server = {
  async start(routes = {}, staticPaths = [], { port }) {
    const app = new Koa();

    // Set up query string parsing
    useQueryParser(app);

    // Load static paths
    forEach(({ route: staticRoute, path: staticPath }) => {
      app.use(mount(staticRoute, serve(staticPath)));
    }, staticPaths);

    // build routers
    const routers = buildRouters(routes);

    // connect routes to app
    forEach((router) => {
      app.use(router.routes());
      app.use(
        router.allowedMethods({
          throw: true,
          notImplemented: () => Boom.notImplemented(),
          methodNotAllowed: () => Boom.methodNotAllowed(),
        })
      );
    }, routers);

    app.listen(port || 8080, () => {
      console.log(`server started on localhost: ${port || 8080}`);
    });

    return app;
  },
};

export { Server, DataValidator };
